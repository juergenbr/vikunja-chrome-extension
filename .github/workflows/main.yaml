# trigger on release branch
name: Release Workflow

# add permission to create releases
permissions:
  contents: write
  issues: write
  packages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

on:
  push:
    tags:
      - 'v*'

jobs:
    release:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              id: checkout
              uses: actions/checkout@v2
              with:
                ref: ${{ github.ref }}
                fetch-depth: 0
            - name: Get Release Version
              id: get_release_version
              run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
            - name: Test
              run: |
                echo $RELEASE_VERSION
                echo ${{ env.RELEASE_VERSION }}
            - name: Create Extension .zip
              id: packExtensionDir
              uses: cardinalby/webext-buildtools-pack-extension-dir-action@v1
              with:
                extensionDir: 'extension'
                zipFilePath: 'build/extension.zip'

            - name: Create CRX
              id: createCrx
              uses: cardinalby/webext-buildtools-chrome-crx-action@v2
              with:
                # zip file made at the packExtensionDir step
                zipFilePath: 'build/extension.zip'
                crxFilePath: 'build/extension.crx'
                privateKey: ${{ secrets.CHROME_CRX_PRIVATE_KEY }}
            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ env.RELEASE_VERSION }}
                  release_name: Release ${{ env.RELEASE_VERSION }}
                  body: |
                    Release ${{ env.RELEASE_VERSION }}
                  draft: false
                  prerelease: false
            # upload crx file as release asset
            - name: Upload Release Asset
              id: upload-release-asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: build/extension.crx
                  asset_name: extension-${{ env.RELEASE_VERSION }}.crx
                  asset_content_type: application/x-chrome-extension
            - name: Upload Artifact
              uses: actions/upload-artifact@v2
              with:
                  name: extension.crx
                  path: build/extension.crx